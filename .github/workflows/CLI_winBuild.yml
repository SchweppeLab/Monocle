name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      working-directory: ./Monocle.CLI
      run: dotnet restore
    - name: Build
      working-directory: ./Monocle.CLI
      run: dotnet build --configuration Release --no-restore
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: v0.3.${{ github.run_id }}.${{ github.run_number }}
          release_name: Monocle Linux CLI v0.3.${{ github.run_id }}.${{ github.run_number }}
          body: ""
          draft: true
          prerelease: true
    - name: Zip CLI # This would actually build your project, using zip for an example artifact
      run: Compress-Archive -Path ./Monocle.CLI/bin/Release -DestinationPath Monocle.CLI.zip
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Monocle.CLI.zip
          asset_name: Monocle.CLI.zip
          asset_content_type: application/zip
    - name: Test
      working-directory: ./Monocle.CLI
      run: dotnet test --no-restore --verbosity normal
